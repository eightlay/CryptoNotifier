version: '3.3'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181

  kafka:
    image: wurstmeister/kafka
    ports:
      - 9094:9094
    depends_on:
      - zookeeper
    links:
      - zookeeper
    env_file:
      - .env
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CREATE_TOPICS: "${KAFKA_TOPIC_SUBSCRIBE}:1:1,${KAFKA_TOPIC_LEVEL_ONE}:1:1"

  data-miner:
    build:
      context: ./src
      dockerfile: ./services/data_miner/Dockerfile
    depends_on:
      - kafka
    links:
      - kafka
    env_file:
      - ./src/services/data_miner/.env
      - .env
    environment:
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_TOPIC_OUT: ${KAFKA_TOPIC_LEVEL_ONE}
      KAFKA_TOPIC_IN: ${KAFKA_TOPIC_SUBSCRIBE}
    restart: always

  # notifier:
  #   build:
  #     context: ./src
  #     dockerfile: ./services/notifier/Dockerfile
  #   depends_on:
  #     - kafka
  #   links:
  #     - kafka
  #   env_file:
  #     - ./src/services/data_miner/.env
  #     - .env
  #   environment:
  #     KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
  #     KAFKA_TOPIC_OUT: ${KAFKA_TOPIC_SUBSCRIBE}
  #     KAFKA_TOPIC_IN: ${KAFKA_TOPIC_LEVEL_ONE}
  #   restart: always
